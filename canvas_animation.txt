CANVAS ANIMATION
---
Пример кода :
//записываем в переменную холст
const canvas = document.getElementById("animation")
//Обозначаем его контекст 
const ctx = canvas.getContext("2d")

//переменая для передвижения квадрата 
let position = 0
//визиваем метод setInterval

setInterval(
    function () {
        //вызов метода для очистки квадрата | первые 2 числа это координаты по x & y вторые два числа размеры квадарата 200х200 пикселей 
        ctx.clearRect(0, 0, 200, 200)
        //мтод кторый рисует квдрат | position, 0 --> изначальная позиция квадрата | 20, 20 размеры сторон в пикселях  
        ctx.fillRect(position, 0, 20, 20)

        //увиличываем позицию на один 
        position++
        if (position > 200) {
            position = 0
        }
    },
    //интервал вызова фуункции 
    30)

    //! clear Rect - очистить прямоугольник
--
CHANGE RECT SIZE
Пример кода:

const canvas = document.getElementById("animation")
const ctx = canvas.getContext("2d")

//счётчик размера квадрата 
	let rectSize = 0

setInterval(
    	function () {
        ctx.clearRect(0, 0, 200, 200)
        ctx.fillRect(0, 0, rectSize, rectSize)
        
        //увиличиваем размер квадрата на 1
        rectSize++
     
        if (rectSize > 200) {
            //если размер становиться больше 200 пикселей возвращаем разме к значению = 0
            rectSize = 0
        }
    },30)

BALL ANIMATION 
--
Пример кода :

const canvas = document.getElementById("animation")
const ctx = canvas.getContext("2d")

function Ball() {
    // позиция мяча созданного через конструктор 
    this.x = 100
    // координаты по y 
    this.y = 100
    // скорость вертикально 
    this.xSpeed = -2
    // скорость горизонтально 
    this.ySpeed = 3
}

const circle = (x, y, radius, fillCircle) => {
    ctx.beginPath()

    ctx.arc(x, y, radius, 0, Math.PI * 2, false)
        if (fillCircle) {
            ctx.fill()
        }else {
            ctx.stroke()
        }
}

//метод котрый рисует мяч 
Ball.prototype.draw = function () {
    //визиваем функцию circle и передаем ей аргументы 
    circle(this.x, this.y, 3, true)
}

//метод который двигает мяч 
Ball.prototype.move = function () {
    //отнимаем от заднной позиции вертикальную скорость, тем самым перемещаем наш мяч
    this.x += this.xSpeed
    //прибавяем к изначальной позиции мяча горизонтальною "скорость", тем самым перемещая наш мяч по холсту  
    this.y += this.ySpeed
}
!Scheme of ball movement! 
		circle: (x: 100, y: 100)

	circle: (x: 100 - 2, y: 100 + 3) -----> (x: 98, y: 103)

circle: (x: 98 - 2, y: 103 + 3) -----> (x: 96, y: 106)
--
ПРОВЕРКА КОЛИЗИИ || ОТСКОК МЯЧА ОТ КРАЕВ ХОЛСТА 

Ball.prototype.checkCollision = function () {
    //если коордниты мяча координат преведенных в условии то мы их инвертируев(тоесть если было 3 стало -3 и наоборот)
    if (this.x < 0 || this.x > 200) {
        this.xSpeed = -xSpeed
    }if (this.y < 0 || this.y > 200) {
        this.ySpeed = -ySpeed
    }
}

!Scheme of ball movement! 

				circle: (x: 3, y: 50)

			circle: (x: 3 - 2, y: 50 + 3) -----> (x: 1, y: 53)

circle: (x: 1 - 2, y: 53 + 3) -----> (x: -1, y: 56)

	circle: (x: -1 + 2, y: 56 + 3) -----> (x: 1, y: 59)
			
			circle: (x: 1 + 2, y: 59 + 3) -----> (x: 3, y: 62)








